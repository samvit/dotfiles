export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/share/npm/bin:$HOME/gsutil:$PATH"
#PATH="/usr:/bin/:usr/local/bin:"
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function
[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh

# pip should only run if there is a virtualenv currently activated
# export PIP_REQUIRE_VIRTUALENV=true
# cache pip-installed packages to avoid re-downloading
# export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache

alias ls='ls -G'
export CLICOLOR=1
export LSCOLORS=Gxfxcxdxbxegedabagacad

export JAVA_HOME=$(/usr/libexec/java_home)
export NODE_PATH="/usr/local/lib/node_modules"
export NODE_PATH='/usr/local/lib/jsctags:${NODE_PATH}'

export DYLD_FALLBACK_LIBRARY_PATH="/usr/local/Cellar/postgresql/9.4.4/lib":$DYLD_FALLBACK_LIBRARY_PATH

export PYTHONPATH="/usr/local/lib/python2.7/site-packages:$PYTHONPATH"
export PATH=/usr/local/bin:$PATH

export PATH=/Users/samvit/builds/bin:$PATH

export GOPATH=$HOME/dev/go
export PATH=$HOME/dev/go/bin:$PATH

export HISTSIZE=20000
# append all commands to the history file, don't overwrite it at the start of every new session
shopt -s histappend

# Editor Aliases:
alias vim='mvim -v'
export EDITOR=vim
alias slime='subl'


# some more ls aliases
alias ll='ls -alhF'
alias la='ls -A'
alias l='ls -CF'
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'''
alias ducks='du -cks *|sort -rn|head -11'
# spy () { lsof -i -P +c 0 +M | grep -i "$1" }
alias json="python -mjson.tool"
alias hs='history | grep --color=auto'

# Work Aliases
alias db='psql -d equidate-local'
alias feed-db='psql -d equifeed-local'
alias teal='heroku pg:psql teal --app equidate'
alias py='ipython'
alias eshell='sh harness.sh'
alias runserver='foreman run python app.py runserver'

#custom Aliases
alias '..'='cd ..'
alias '...'='cd ../..'
alias junk='cd ~/junk'
alias os='cd ~/dev/CS162-Stuff'
alias comp='cd ~/dev/CS164-Stuff/'
alias dev='cd ~/dev'
alias dbox='cd ~/Dropbox\ \(Personal\)'
alias ebox='cd ~/Dropbox\ \(Equidate\)'
alias todo='vim ~/Dropbox/todo.txt'
alias jokes='vim ~/Dropbox/Notes/Jokes.txt'
alias e='cd ~/dev/equidate/ && source venv/bin/activate' # Equidate
alias f='cd ~/dev/equifeed && source venv/bin/activate' # Equifeed
alias b='cd ~/dev/equibroker && source venv/bin/activate' # Equibroker
alias m='cd ~/dev/equimobile/EquidateMobile/App/' # Equidate Mobile
alias back='cd ~/dev/equidate-backend' # Equidate Backend
alias h='cd ~/dev/harvester/' # Harvester
alias etrack='cd ~/dev/etrack/'
alias box='cd ~/dev/minbox/'
alias monk='cd ~/dev/mailmonkey'
alias site='cd ~/dev/personal-website/'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias rm='trash'
# alias rm='mv -f \!* ~/.deleted/'
# alias unrm='mv ~/.deleted/\!* .'
alias gs='git status'
alias gpm='git push origin master'
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias glog='git log --pretty=format:"[%h] %ae, %ar: %s" --stat'
alias gtree='git log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"'

# glf = git log first
alias glf='gl | head -n 25'

function gc () {
  git checkout $@;
};

function gcm () {
  git commit -m "$@";
};

function gb () {
  git branch $@;
};

function gd () {
  git difftool $@;
};

function gpll () {
  git pull $@;
};

function gpsh () {
  git push $@;
};

function gup () {
  git up $@;
};

pull_request() {
    to_branch=$1
    if [ -z $to_branch ]; then
        to_branch="master"
    fi

    # try the upstream branch if possible, otherwise origin will do
    upstream=$(git config --get remote.upstream.url)
    origin=$(git config --get remote.origin.url)
    if [ -z $upstream ]; then
        upstream=$origin
    fi

    to_user=$(echo $upstream | sed -e 's/.*[\/:]\([^/]*\)\/[^/]*$/\1/')
    from_user=$(echo $origin | sed -e 's/.*[\/:]\([^/]*\)\/[^/]*$/\1/')
    repo=$(basename `git rev-parse --show-toplevel`)
    from_branch=$(git rev-parse --abbrev-ref HEAD)
    open "https://github.com/$to_user/$repo/pull/new/$to_user:$to_branch...$from_user:$from_branch"
}

alias eb="vim ~/.bashrc"
alias sb="source ~/.bashrc"
alias ev="vim ~/.vimrc"

function server () {
  python -m SimpleHTTPServer $@
}

# Run ls whenever I cd somewhere
function cd () { 
  builtin cd "$@" && ls;
}

#better bash history navigator - up and down match to stuff that is the same behind the cursor
bind '"\e[A"':history-search-backward
bind '"\e[B"':history-search-forward

function beast () {
  git rm *.DS_Store
  git add .;
  git commit -m "$@";
  git pull;
};

function rage () {
  git rm *.DS_Store
  git add .;
  git difftool HEAD;
  git commit -m "$@";
  git pull;
  git push;
};

function push () {
  git push "$@";
}

function proddb () {
    e;
    source venv/bin/activate;
    heroku pg:psql HEROKU_POSTGRESQL_GOLD_URL --app equidate;
};


# To encrypt a file:
# openssl des3 -salt -in file.log -out file.des3
alias encrypt="openssl des3 -salt"
# To Decrypt: 

# openssl des3 -d -salt -in file.des3 -out file.txt
# decrypt -in file.des3 -out file.txt
alias decrypt="openssl des3 -d -salt"

function gstats {
# awesome work from https://github.com/esc/git-stats
# including some modifications
  if [ -n "$(git symbolic-ref HEAD 2> /dev/null)" ]; then
    echo "Number of commits per author:"
    git --no-pager shortlog -sn --all
    AUTHORS=$( git shortlog -sn --all | cut -f2 | cut -f1 -d' ')
    LOGOPTS=""
    if [ "$1" == '-w' ]; then
      LOGOPTS="$LOGOPTS -w"
      shift
    fi
    if [ "$1" == '-M' ]; then
      LOGOPTS="$LOGOPTS -M"
      shift
    fi
    if [ "$1" == '-C' ]; then
      LOGOPTS="$LOGOPTS -C --find-copies-harder"
      shift
    fi
    for a in $AUTHORS
    do
      echo '-------------------'
      echo "Statistics for: $a"
      echo -n "Number of files changed: "
      git log $LOGOPTS --all --numstat --format="%n" --author=$a | cut -f3 | sort -iu | wc -l
      echo -n "Number of lines added: "
      git log $LOGOPTS --all --numstat --format="%n" --author=$a | cut -f1 | awk '{s+=$1} END {print s}'
      echo -n "Number of lines deleted: "
      git log $LOGOPTS --all --numstat --format="%n" --author=$a | cut -f2 | awk '{s+=$1} END {print s}'
      echo -n "Number of merges: "
      git log $LOGOPTS --all --merges --author=$a | grep -c '^commit'
    done
  else
    echo "you're currently not in a git repository"
  fi
}

function myip {
  res=$(curl -s checkip.dyndns.org | grep -Eo '[0-9\.]+')
  echo "$res"
}

# set fancy prompt
if [ -f "$HOME/.bash_ps" ]; then
    . "$HOME/.bash_ps"
fi

dirlength() {
  echo -n ${PWD/#$HOME} | wc -c
}

extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

tarball () {
    tar -zcvf "$1.tar.gz" $1
}

runforever () {
    while true; do
        $@
        echo "Process Died... RESTARTING"
        sleep 5
    done
}

cdf() {
	target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
	if [ "$target" != "" ]; then
		cd "$target"; pwd
	else
		echo 'No Finder window found' >&2
	fi
}

function portkill () { 
    pid=$(lsof -i:$1 -t); 
    if [ "$pid" != "" ]; then
        # First try to kill the process gently. Then KILL it if it doesnt die
        kill -TERM $pid || kill -KILL $pid
    fi
}

